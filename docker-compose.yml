version: "3.7"
services:
    # image project
    newttech:
        build:
            args:
                user: carlos
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
            - queue
        networks:
            - rede

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 80:80
            #- 443:443
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
            #- ./etc/letsencrypt/live/:/etc/letsencrypt/live/
        networks:
            - rede

    # db mysql
    mysql:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - 3306:3306
        networks:
            - rede

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        links:
            - mysql
        #restart: always
        ports:
           - 8081:80
        environment:
        #  - PMA_HOST: ${DB_HOST}
        #  - PMA_USER: ${DB_USERNAME}
        #  - PMA_PASSWORD: ${DB_PASSWORD}
           - PMA_ARBITRARY=1

    # queue
    queue:
        build:
            args:
                user: carlos
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - rede

    # redis
    redis:
        image: redis:latest
        networks:
            - rede

networks:
    rede:
        driver: bridge
